{"version":3,"sources":["components/article.tsx","components/add-article.tsx","store/action-types.ts","store/action-creators.ts","app.tsx","store/reducer.ts","index.tsx"],"names":["Article","article","removeArticle","dispatch","useDispatch","deleteArticle","useCallback","title","body","className","onClick","AddArticle","saveArticle","initialState","useState","setArticle","handleArticleData","evt","currentTarget","id","value","onSubmit","preventDefault","type","placeholder","onChange","disabled","ADD_ARTICLE","REMOVE_ARTICLE","simulateHttpRequest","actionTypes","action","setTimeout","App","articles","useSelector","state","shallowEqual","addArticle","map","reducer","newArticle","Date","valueOf","updatedArticles","filter","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","render"],"mappings":"qMASaA,EAA2B,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAC7CC,EAA0BC,cAE1BC,EAAgBC,uBAAY,SAACL,GAAD,OAAuBE,EAASD,EAAcD,MAAW,CAACE,EAAUD,IAE9FK,EAAgBN,EAAhBM,MAAOC,EAASP,EAATO,KAEf,OACC,sBAAKC,UAAU,UAAf,UACC,gCACC,6BAAKF,IACL,4BAAIC,OAEL,wBAAQE,QAAS,kBAAML,EAAcJ,IAArC,wB,sBCXUU,EAA8B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACvCC,EAAe,CACpBN,MAAO,GACPC,KAAM,IAGP,EAA8BM,mBAAuBD,GAArD,mBAAOZ,EAAP,KAAgBc,EAAhB,KAEMC,EAAoB,SAACC,GAC1BF,EAAW,2BACPd,GADM,kBAERgB,EAAIC,cAAcC,GAAKF,EAAIC,cAAcE,UAUpCb,EAAgBN,EAAhBM,MAAOC,EAASP,EAATO,KAEf,OACC,uBAAMa,SATe,SAACJ,GACtBA,EAAIK,iBACJV,EAAYX,GACZc,EAAWF,IAMoBJ,UAAU,cAAzC,UACC,uBAAOc,KAAK,OAAOJ,GAAG,QAAQK,YAAY,QAAQC,SAAUT,EAAmBI,MAAOb,IACtF,uBAAOgB,KAAK,OAAOJ,GAAG,OAAOK,YAAY,cAAcC,SAAUT,EAAmBI,MAAOZ,IAC3F,wBAAQkB,WAAYnB,GAASC,GAA7B,6BCtCUmB,EAAc,cACdC,EAAiB,iBCUjB1B,EAAgB,SAACD,GAM7B,OAAO4B,EALuB,CAC7BN,KAAMO,EACN7B,aAMW4B,EAAsB,SAACE,GAAD,OAA2B,SAAC5B,GAC9D6B,YAAW,kBAAM7B,EAAS4B,KAAS,OCQrBE,EAlBO,WACrB,IAAMC,EAAgCC,aAAY,SAACC,GAAD,OAAyBA,EAAMF,WAAUG,KAErFlC,EAA0BC,cAE1BQ,EAAcN,uBAAY,SAACL,GAAD,OAAuBE,EDd9B,SAACF,GAM1B,OAAO4B,EALuB,CAC7BN,KAAMO,EACN7B,YCW+DqC,CAAWrC,MAAW,CAACE,IAEvF,OACC,iCACC,6CACA,cAAC,EAAD,CAAYS,YAAaA,IACxBsB,EAASK,KAAI,SAACtC,GAAD,OACb,cAAC,EAAD,CAA0BA,QAASA,EAASC,cAAeA,GAA7CD,EAAQkB,W,QCrBpBN,EAA6B,CAClCqB,SAAU,CACT,CACCf,GAAI,EACJZ,MAAO,SACPC,KAAM,2PA6BMgC,EAxBC,WAA8E,IAA7EJ,EAA4E,uDAAtDvB,EAAckB,EAAwC,uCAC5F,OAAQA,EAAOR,MACd,KAAKO,EACJ,IAAMW,EAAoB,2BACtBV,EAAO9B,SADe,IAEzBkB,IAAI,IAAIuB,MAAOC,YAGhB,OAAO,2BACHP,GADJ,IAECF,SAAS,GAAD,mBAAME,EAAMF,UAAZ,CAAsBO,MAEhC,KAAKX,EACJ,IAAMc,EAA8BR,EAAMF,SAASW,QAAO,SAAC5C,GAAD,OAAaA,EAAQkB,KAAOY,EAAO9B,QAAQkB,MAErG,OAAO,2BACHiB,GADJ,IAECF,SAAUU,IAIb,OAAOR,GCzBFU,EAAyEC,YAC9EP,EACAQ,YAAgBC,MAGXC,EAAcC,SAASC,eAAe,QAE5CC,iBACC,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACC,cAAC,EAAD,MAEDI,K","file":"static/js/main.c7b2a65a.chunk.js","sourcesContent":["import { useCallback } from 'react';\nimport { Dispatch } from 'redux';\nimport { useDispatch } from 'react-redux';\n\ntype Props = {\n\tarticle: IArticle;\n\tremoveArticle: (article: IArticle) => void;\n};\n\nexport const Article: React.FC<Props> = ({ article, removeArticle }) => {\n\tconst dispatch: Dispatch<any> = useDispatch();\n\n\tconst deleteArticle = useCallback((article: IArticle) => dispatch(removeArticle(article)), [dispatch, removeArticle]);\n\n\tconst { title, body } = article;\n\n\treturn (\n\t\t<div className=\"article\">\n\t\t\t<div>\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<p>{body}</p>\n\t\t\t</div>\n\t\t\t<button onClick={() => deleteArticle(article)}>Delete</button>\n\t\t</div>\n\t);\n};\n","import { useState } from 'react';\n\ntype Props = {\n\tsaveArticle: (article: IArticle | any) => void;\n};\n\ntype InitialState = {\n\ttitle: string;\n\tbody: string;\n};\n\nexport const AddArticle: React.FC<Props> = ({ saveArticle }) => {\n\tconst initialState = {\n\t\ttitle: '',\n\t\tbody: '',\n\t};\n\n\tconst [article, setArticle] = useState<InitialState>(initialState);\n\n\tconst handleArticleData = (evt: React.FormEvent<HTMLInputElement>) => {\n\t\tsetArticle({\n\t\t\t...article,\n\t\t\t[evt.currentTarget.id]: evt.currentTarget.value,\n\t\t});\n\t};\n\n\tconst addNewArticle = (evt: React.FormEvent) => {\n\t\tevt.preventDefault();\n\t\tsaveArticle(article);\n\t\tsetArticle(initialState);\n\t};\n\n\tconst { title, body } = article;\n\n\treturn (\n\t\t<form onSubmit={addNewArticle} className=\"add-article\">\n\t\t\t<input type=\"text\" id=\"title\" placeholder=\"Title\" onChange={handleArticleData} value={title} />\n\t\t\t<input type=\"text\" id=\"body\" placeholder=\"Description\" onChange={handleArticleData} value={body} />\n\t\t\t<button disabled={!(title || body)}>Add article</button>\n\t\t</form>\n\t);\n};\n","export const ADD_ARTICLE = 'ADD_ARTICLE';\nexport const REMOVE_ARTICLE = 'REMOVE_ARTICLE';\n","import * as actionTypes from './action-types';\n\nexport const addArticle = (article: IArticle) => {\n\tconst action: ArticleAction = {\n\t\ttype: actionTypes.ADD_ARTICLE,\n\t\tarticle,\n\t};\n\n\treturn simulateHttpRequest(action);\n};\n\nexport const removeArticle = (article: IArticle) => {\n\tconst action: ArticleAction = {\n\t\ttype: actionTypes.REMOVE_ARTICLE,\n\t\tarticle,\n\t};\n\n\treturn simulateHttpRequest(action);\n};\n\nexport const simulateHttpRequest = (action: ArticleAction) => (dispatch: DispatchType) => {\n\tsetTimeout(() => dispatch(action), 500);\n};\n","import { useCallback } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nimport './index.css';\n\nimport { Article } from './components/article';\nimport { AddArticle } from './components/add-article';\n\nimport { addArticle, removeArticle } from './store/action-creators';\nimport { Dispatch } from 'redux';\n\nconst App: React.FC = () => {\n\tconst articles: readonly IArticle[] = useSelector((state: ArticleState) => state.articles, shallowEqual);\n\n\tconst dispatch: Dispatch<any> = useDispatch();\n\n\tconst saveArticle = useCallback((article: IArticle) => dispatch(addArticle(article)), [dispatch]);\n\n\treturn (\n\t\t<main>\n\t\t\t<h1>My Articles</h1>\n\t\t\t<AddArticle saveArticle={saveArticle} />\n\t\t\t{articles.map((article: IArticle) => (\n\t\t\t\t<Article key={article.id} article={article} removeArticle={removeArticle} />\n\t\t\t))}\n\t\t</main>\n\t);\n};\n\nexport default App;\n","import * as actionTypes from './action-types';\n\nconst initialState: ArticleState = {\n\tarticles: [\n\t\t{\n\t\t\tid: 1,\n\t\t\ttitle: 'Post 1',\n\t\t\tbody: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Necessitatibus assumenda dolor sed temporibus aliquam, unde aut hic, blanditiis, porro odit fugiat aspernatur recusandae exercitationem impedit perspiciatis? Quos aliquid illo architecto?',\n\t\t},\n\t],\n};\n\nconst reducer = (state: ArticleState = initialState, action: ArticleAction): ArticleState => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_ARTICLE:\n\t\t\tconst newArticle: IArticle = {\n\t\t\t\t...action.article,\n\t\t\t\tid: new Date().valueOf(),\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tarticles: [...state.articles, newArticle],\n\t\t\t};\n\t\tcase actionTypes.REMOVE_ARTICLE:\n\t\t\tconst updatedArticles: IArticle[] = state.articles.filter((article) => article.id !== action.article.id);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tarticles: updatedArticles,\n\t\t\t};\n\t}\n\n\treturn state;\n};\n\nexport default reducer;\n","import { render } from 'react-dom';\nimport { createStore, applyMiddleware, Store } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './app';\nimport reducer from './store/reducer';\n\nconst store: Store<ArticleState, ArticleAction> & { dispatch: DispatchType } = createStore(\n\treducer,\n\tapplyMiddleware(thunk)\n);\n\nconst rootElement = document.getElementById('root');\n\nrender(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\trootElement\n);\n"],"sourceRoot":""}